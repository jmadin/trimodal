<% provide(:title, 'Help') %>

<h3>Reshaping trait download data</h3>

<p>By default, the data is downloaded as a table in which the first column denotes the trait.  We currently don't support downloading species by trait matrix for two reasons.  First, there are many possible ways to aggregate such a matrix and so it's better to have control over this yourself.  Second, the table download retains essential metadata such as units, resources and data contributors.</p>

<pre><code>      trait             master_species value unit resource_id contributor_id
depth_range          Acropora cerealis    17    m          11         jmadin
depth_range          Acropora cerealis    10    m          98         abaird
depth_range          Acropora cerealis    11    m          75         mdiaz
depth_range       Acropora cervicornis  59.5    m          11         jmadin
depth_range Acropora chesterfieldensis    17    m          11         jmadin
depth_range Acropora chesterfieldensis    27    m          98         abaird
depth_range         Acropora clathrata    12    m          11         jmadin
depth_range     Acropora crateriformis    14    m          11         jmadin
depth_range           Acropora cuneata    15    m          11         jmadin
depth_range          Acropora cytherea    22    m          11         jmadin</code></pre>

<p>To convert a downloaded table into a species by trait matrix, we suggest you use the <code>reshape2</code> package (or similar) in the statistical programming language R.  Once this package is loaded, use the <code>acast</code> function. Initially, you might use <code>acast(dat, master_species~trait, value.var="value", fun.aggregate=function(x) {x[1]})</code>, which grabs the first trait value for a species and is suitable for traits with one value.  How you aggregate traits with many values will depend on the trait.  For example, <code>acast(dat, master_species~trait, value.var="value", fun.aggregate=function(x) {mean(x)})</code> will create a species by trait matrix with mean trait values for each species, but this will not work if you have non-numeric traits in your dataset.  Therefore, the <code>fun.aggregate</code> method needs to be developed using logical conditions to get the data structure you want (e.g., what to do if a species trait has more than one value, or what to do if a species trait has more than one value and the values are characters).  Below is a generic example that returns mean values for numeric traits and the first value for character trait values in cases where there are more than one value for a species by trait combination.</p>

<h4>Example</h4>
<pre><code># Load the "reshape2" package for R.  This package must initially be downloaded from CRAN
library(reshape2)

# Load your csv file downloaded from the trait database
data_raw <- read.csv("ctdb_20130816.csv", as.is=TRUE)

# Develop your aggregation rules function for the "acast" function
my_aggregate_rules <- function(x) {
  if (length(x) > 1) {               # Does a species by trait combination have more than 1 value?
    x <- type.convert(x, as.is=TRUE)
    if (is.character(x)) {
      return(x[1])                   # If values are strings (characters), then return the first value
    } else {
      return(as.character(mean(x)))  # If values are numbers, then return the mean (converted back to character)
    }
  } else {
    return(x)                        # If a species by trait combination has 1 value, then just return that value 
  }
}

# Reshape your data using "acast".  Fill gaps with NAs
data_reshaped <- acast(data_raw, master_species~trait, value.var="value", fun.aggregate=my_aggregate_rules, fill="NA")

# If desired, convert the reshaped data into a data frame for analysis in R
data_final <- data.frame(data_reshaped)</code></pre>